1、JS盒子模型中的常用属性
  client(width/height/top/left)
  offset(width/height/top/left)  offsetParent
  scroll(width/height/top(读写)/left(读写))

  ->offset：获取当前元素相对于BODY的偏移(top:xxx,left:xxx)
  ->获取当前元素具体的某一个样式值:
    curEle.style.xxx：只能获取写在元素行内上的样式
    getComputedStyle/currentStyle：获取当前元素所有经过浏览器计算的样式
    =>getCss
    =>setCss
    =>setGroupCss
    =>css ->JQ中的CSS方法


//reg = /^alpha\(opacity=(((\d|([1-9]\d))(\.\d+)?)|(100))\)$/;//->数字部分:0-100之间/整数或者小数
reg = /((\d|([1-9]\d))(\.\d+)?)|(100)/;
//->0-99 \d|([1-9]\d)
//->(\.\d+)?


var strClass='w1';
/(^|\s+)'+strClass+'(\s+|$)/ ->使用字面量方式创建的正则,在两个斜杠之间包含起来的都是元字符,没有字符串拼接或者变量这一说
=>需求：把strClass变量存储的值作为正则的一部分，这种情况下只能使用实例创建的方式
new RegExp('[元字符部分]',[修饰符部分])
  new RegExp('(^|\\s+)'+strClass+'(\\s+|$)','i'); =>/(^|\s+)w1(\s+|$)/i

  使用实例创建方式创建的正则，当遇到\xxx情况的时候，我们都需要在\之前在加一个\：不加的话，默认出现的斜杠仅仅被作为了无意义的字符串，在加一个斜杠，才相当于让其变为转义字符

===============================
function getByClass(strClass,context){
   //->如果上下文不传,默认是document
   context=context||document;

   //->如果兼容getElementsByClassName我们使用内置方法获取即可
   if('getElementsByClassName' in document){
      return context.getElementsByClassName(strClass);
   }

   //->不兼容的情况下按照如下思路处理
   //1、获取当前上下文下所有的元素标签(把类数组转换成为数组)，把传递进来的样式拆分成一个个的:' w2   w1   ' ->['w2','w1']
   var allElement=listToArray(context.getElementsByTagName('*'));
   var classList=strClass.replace(/^ +| +$/g,'').split(/ +/);

   //2、循环样式数组，拿出每一个样式在所有的标签中进行筛选，每一次的筛选，都把不包含这个样式类名的元素在原有的集合中移除掉，这样筛选完成后，剩下的集合就是我们想要的
   for(var i=0,len=classList.length;i<len;i++){
      var reg=new RegExp('\\b'+classList[i]+'\\b');

      for(var j=0,len2=allElement.length;j<len2;j++){
         if(!reg.test(allElement[j].className)){
            allElement.splice(j,1);
            j--;
            len2--;
         }
         //->!reg.test(allElement[j].className)?(allElement.splice(j,1),j--,len2--):null;
      }
   }
   return allElement;
}





















